# Generated by Django 4.1 on 2022-08-29 19:12

import uuid

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields

import dandiapi.api.storage


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('api', '0034_remove_embargoedzarrarchive_dandiset_and_more'),
    ]

    operations = [
        migrations.SeparateDatabaseAndState(
            state_operations=[
                migrations.CreateModel(
                    name='EmbargoedZarrArchive',
                    fields=[
                        (
                            'id',
                            models.BigAutoField(
                                auto_created=True,
                                primary_key=True,
                                serialize=False,
                                verbose_name='ID',
                            ),
                        ),
                        (
                            'created',
                            django_extensions.db.fields.CreationDateTimeField(
                                auto_now_add=True, verbose_name='created'
                            ),
                        ),
                        (
                            'modified',
                            django_extensions.db.fields.ModificationDateTimeField(
                                auto_now=True, verbose_name='modified'
                            ),
                        ),
                        (
                            'zarr_id',
                            models.UUIDField(db_index=True, default=uuid.uuid4, unique=True),
                        ),
                        ('name', models.CharField(max_length=512)),
                        ('file_count', models.BigIntegerField(default=0)),
                        ('size', models.BigIntegerField(default=0)),
                        ('checksum', models.CharField(default=None, max_length=512, null=True)),
                        (
                            'status',
                            models.CharField(
                                choices=[
                                    ('Pending', 'Pending'),
                                    ('Ingesting', 'Ingesting'),
                                    ('Complete', 'Complete'),
                                ],
                                default='Pending',
                                max_length=9,
                            ),
                        ),
                        (
                            'dandiset',
                            models.ForeignKey(
                                on_delete=django.db.models.deletion.CASCADE,
                                related_name='embargoed_zarr_archives',
                                to='api.dandiset',
                            ),
                        ),
                    ],
                    options={
                        'db_table': 'api_embargoedzarrarchive',
                        'get_latest_by': 'modified',
                        'abstract': False,
                    },
                ),
                migrations.CreateModel(
                    name='ZarrArchive',
                    fields=[
                        (
                            'id',
                            models.BigAutoField(
                                auto_created=True,
                                primary_key=True,
                                serialize=False,
                                verbose_name='ID',
                            ),
                        ),
                        (
                            'created',
                            django_extensions.db.fields.CreationDateTimeField(
                                auto_now_add=True, verbose_name='created'
                            ),
                        ),
                        (
                            'modified',
                            django_extensions.db.fields.ModificationDateTimeField(
                                auto_now=True, verbose_name='modified'
                            ),
                        ),
                        (
                            'zarr_id',
                            models.UUIDField(db_index=True, default=uuid.uuid4, unique=True),
                        ),
                        ('name', models.CharField(max_length=512)),
                        ('file_count', models.BigIntegerField(default=0)),
                        ('size', models.BigIntegerField(default=0)),
                        ('checksum', models.CharField(default=None, max_length=512, null=True)),
                        (
                            'status',
                            models.CharField(
                                choices=[
                                    ('Pending', 'Pending'),
                                    ('Ingesting', 'Ingesting'),
                                    ('Complete', 'Complete'),
                                ],
                                default='Pending',
                                max_length=9,
                            ),
                        ),
                        (
                            'dandiset',
                            models.ForeignKey(
                                on_delete=django.db.models.deletion.CASCADE,
                                related_name='zarr_archives',
                                to='api.dandiset',
                            ),
                        ),
                    ],
                    options={
                        'db_table': 'api_zarrarchive',
                        'get_latest_by': 'modified',
                        'abstract': False,
                    },
                ),
                migrations.CreateModel(
                    name='ZarrUploadFile',
                    fields=[
                        (
                            'id',
                            models.BigAutoField(
                                auto_created=True,
                                primary_key=True,
                                serialize=False,
                                verbose_name='ID',
                            ),
                        ),
                        (
                            'created',
                            django_extensions.db.fields.CreationDateTimeField(
                                auto_now_add=True, verbose_name='created'
                            ),
                        ),
                        (
                            'modified',
                            django_extensions.db.fields.ModificationDateTimeField(
                                auto_now=True, verbose_name='modified'
                            ),
                        ),
                        ('path', models.CharField(max_length=512)),
                        (
                            'etag',
                            models.CharField(
                                max_length=40,
                                validators=[
                                    django.core.validators.RegexValidator(
                                        '^[0-9a-f]{32}(-[1-9][0-9]*)?$'
                                    )
                                ],
                            ),
                        ),
                        (
                            'blob',
                            models.FileField(
                                blank=True,
                                max_length=1000,
                                storage=dandiapi.api.storage.get_storage,
                                upload_to='',
                            ),
                        ),
                        (
                            'zarr_archive',
                            models.ForeignKey(
                                on_delete=django.db.models.deletion.CASCADE,
                                related_name='active_uploads',
                                to='zarr.zarrarchive',
                            ),
                        ),
                    ],
                    options={
                        'db_table': 'api_zarruploadfile',
                        'get_latest_by': 'modified',
                        'abstract': False,
                    },
                ),
                migrations.CreateModel(
                    name='EmbargoedZarrUploadFile',
                    fields=[
                        (
                            'id',
                            models.BigAutoField(
                                auto_created=True,
                                primary_key=True,
                                serialize=False,
                                verbose_name='ID',
                            ),
                        ),
                        (
                            'created',
                            django_extensions.db.fields.CreationDateTimeField(
                                auto_now_add=True, verbose_name='created'
                            ),
                        ),
                        (
                            'modified',
                            django_extensions.db.fields.ModificationDateTimeField(
                                auto_now=True, verbose_name='modified'
                            ),
                        ),
                        ('path', models.CharField(max_length=512)),
                        (
                            'etag',
                            models.CharField(
                                max_length=40,
                                validators=[
                                    django.core.validators.RegexValidator(
                                        '^[0-9a-f]{32}(-[1-9][0-9]*)?$'
                                    )
                                ],
                            ),
                        ),
                        (
                            'blob',
                            models.FileField(
                                blank=True,
                                max_length=1000,
                                storage=dandiapi.api.storage.get_embargo_storage,
                                upload_to='',
                            ),
                        ),
                        (
                            'zarr_archive',
                            models.ForeignKey(
                                on_delete=django.db.models.deletion.CASCADE,
                                related_name='active_uploads',
                                to='zarr.embargoedzarrarchive',
                            ),
                        ),
                    ],
                    options={
                        'db_table': 'api_embargoedzarruploadfile',
                        'get_latest_by': 'modified',
                        'abstract': False,
                    },
                ),
                migrations.AddConstraint(
                    model_name='zarrarchive',
                    constraint=models.UniqueConstraint(
                        fields=('dandiset', 'name'), name='zarr-zarrarchive-unique-name'
                    ),
                ),
                migrations.AddConstraint(
                    model_name='zarrarchive',
                    constraint=models.CheckConstraint(
                        check=models.Q(
                            models.Q(
                                ('checksum__isnull', True), ('status__in', ['Pending', 'Ingesting'])
                            ),
                            models.Q(('checksum__isnull', False), ('status', 'Complete')),
                            _connector='OR',
                        ),
                        name='zarr-zarrarchive-consistent-checksum-status',
                    ),
                ),
                migrations.AddConstraint(
                    model_name='embargoedzarrarchive',
                    constraint=models.UniqueConstraint(
                        fields=('dandiset', 'name'), name='zarr-embargoedzarrarchive-unique-name'
                    ),
                ),
                migrations.AddConstraint(
                    model_name='embargoedzarrarchive',
                    constraint=models.CheckConstraint(
                        check=models.Q(
                            models.Q(
                                ('checksum__isnull', True), ('status__in', ['Pending', 'Ingesting'])
                            ),
                            models.Q(('checksum__isnull', False), ('status', 'Complete')),
                            _connector='OR',
                        ),
                        name='zarr-embargoedzarrarchive-consistent-checksum-status',
                    ),
                ),
            ]
        )
    ]
