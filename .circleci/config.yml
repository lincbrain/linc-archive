version: 2
jobs:
  test-gui:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - run:
          name: Install web app
          command: yarn install --frozen-lockfile
      - run:
          name: Lint web app
          command: yarn run lint --no-fix
      - run:
          name: Install E2E tests
          command: yarn install --frozen-lockfile
          working_directory: test
      - run:
          name: Lint E2E tests
          command: yarn run lint --no-fix --max-warnings=0
          working_directory: test

  test-e2e:
    docker:
      - image: circleci/python:3.9-node-browsers
      - image: circleci/postgres:latest-ram
        environment:
          POSTGRES_DB: django
          POSTGRES_PASSWORD: postgres
      - image: minio/minio:latest
        command: server /data
        environment:
          MINIO_ACCESS_KEY: minioAccessKey
          MINIO_SECRET_KEY: minioSecretKey
      - image: rabbitmq:management
        name: rabbitmq
    steps:
      - checkout
      - run:
          name: Create virtual environment
          command: python3 -m venv install_env
      - run:
          name: Activate virtual environment
          command: echo ". $CIRCLE_WORKING_DIRECTORY/install_env/bin/activate" >> $BASH_ENV
      - run:
          name: Upgrade pip
          command: pip install -U pip
      - run:
          name: Clone dandi-api
          command: git clone https://github.com/dandi/dandi-api.git
      - run:
          name: Install dandi-api
          command: pip install ./dandi-api[dev]
      - run:
          name: Apply migrations to API server
          command: python manage.py migrate
          working_directory: dandi-api
          environment:
            DJANGO_DATABASE_URL: postgres://postgres:postgres@localhost:5432/django
            DJANGO_MINIO_STORAGE_ENDPOINT: localhost:9000
            DJANGO_MINIO_STORAGE_ACCESS_KEY: minioAccessKey
            DJANGO_MINIO_STORAGE_SECRET_KEY: minioSecretKey
            DJANGO_DANDI_SCHEMA_VERSION: 0.5.1
            DJANGO_STORAGE_BUCKET_NAME: dandi-bucket
            DJANGO_DANDI_DANDISETS_BUCKET_NAME: dandi-bucket
            DJANGO_CELERY_BROKER_URL: amqp://rabbitmq:5672/
      - run:
          name: Run API server in the background
          command: python manage.py runserver
          working_directory: dandi-api
          background: true
          environment:
            DJANGO_DATABASE_URL: postgres://postgres:postgres@localhost:5432/django
            DJANGO_MINIO_STORAGE_ENDPOINT: localhost:9000
            DJANGO_MINIO_STORAGE_ACCESS_KEY: minioAccessKey
            DJANGO_MINIO_STORAGE_SECRET_KEY: minioSecretKey
            DJANGO_DANDI_SCHEMA_VERSION: 0.5.1
            DJANGO_STORAGE_BUCKET_NAME: dandi-bucket
            DJANGO_DANDI_DANDISETS_BUCKET_NAME: dandi-bucket
            DJANGO_CELERY_BROKER_URL: amqp://rabbitmq:5672/
      - run:
          name: Install web app
          command: yarn install --frozen-lockfile
      - run:
          name: Run web app
          command: yarn serve
          background: true
      - run:
          name: Install E2E tests
          command: yarn install --frozen-lockfile
          working_directory: test
      - run:
          name: Run E2E tests
          command: yarn run test
          working_directory: test
          environment:
            CLIENT_URL: http://localhost:8085

workflows:
  version: 2
  test_and_deploy:
    jobs:
      - test-gui
      - test-e2e:
          requires:
            - test-gui
